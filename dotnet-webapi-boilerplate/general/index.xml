<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>General on</title><link>/dotnet-webapi-boilerplate/general/</link><description>Recent content in General on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 24 Aug 2021 11:40:05 +0530</lastBuildDate><atom:link href="/dotnet-webapi-boilerplate/general/index.xml" rel="self" type="application/rss+xml"/><item><title>Overview</title><link>/dotnet-webapi-boilerplate/general/overview/</link><pubDate>Tue, 24 Aug 2021 11:40:05 +0530</pubDate><guid>/dotnet-webapi-boilerplate/general/overview/</guid><description>What&amp;rsquo;s fullstackhero&amp;rsquo;s .NET Web API Boilerplate? # fullstackhero&amp;rsquo;s .NET Web API Boilerplate is a starting point for your next .NET 7 Clean Architecture Project that incorporates the most essential packages and features your projects will ever need including out of the box Multi-Tenancy support. This project can save well over 200+ hours of development time for your team.
As the name suggests, this is an API / Server Boilerplate.</description></item><item><title>Development Environment</title><link>/dotnet-webapi-boilerplate/general/development-environment/</link><pubDate>Mon, 30 Aug 2021 00:59:34 +0530</pubDate><guid>/dotnet-webapi-boilerplate/general/development-environment/</guid><description>fullstackhero&amp;rsquo;s .NET WebApi Boilerplate Project Development needs you to have the following applications / tools available on your machine. Please Note that this project is being built on a Windows 10 Machine using Visual Studio Code IDE.
.NET SDK # As mentioned earlier, this project is built with the latest available .NET SDK, which is .NET 7.0.
Ensure that you have the latest version of the SDK available - Download from Microsoft</description></item><item><title>Getting Started ðŸš€</title><link>/dotnet-webapi-boilerplate/general/getting-started/</link><pubDate>Mon, 30 Aug 2021 00:59:34 +0530</pubDate><guid>/dotnet-webapi-boilerplate/general/getting-started/</guid><description>Firstly, make sure that you have already setup your development environment that runs the prerequisite tools and SDKs. Refer Development Environment for details.
This guide will take you right from strating up your own .NET Web API Project using fullstackhero .NET WebAPI Boilerplate package / repository to testing the API using the provided Postman Collection!
To get started with this Boilerplate, here are the avaiable options.
Forking the Repository. Use this if you want to always keep your version of the Boilerplate up-to date with the latest changes.</description></item><item><title>API Testing</title><link>/dotnet-webapi-boilerplate/general/api-testing/</link><pubDate>Mon, 30 Aug 2021 00:59:34 +0530</pubDate><guid>/dotnet-webapi-boilerplate/general/api-testing/</guid><description>fullstackhero&amp;rsquo;s Web API can be tested via Postman as well as the built in Swagger.
Once the WebAPI is up and running (by default of port 5001 of localhost), here are the ways to test the functionalilty easily.
Swagger # Navigate to https://localhost:5001/swagger/index.html
Here you can see all the available endpoints. Since all of the endpoints except the login and registration endpoints are secured, you would need a Authentication Token to access these services.</description></item><item><title>CLI Commands</title><link>/dotnet-webapi-boilerplate/general/cli-commands/</link><pubDate>Tue, 24 Aug 2021 11:40:05 +0530</pubDate><guid>/dotnet-webapi-boilerplate/general/cli-commands/</guid><description>Docker # Build # This command is to be executed from the root folder of the project.
docker build -t iammukeshm/dotnet-webapi:0.0.3-rc -t iammukeshm/dotnet-webapi:latest . Push to DockerHub # This command is to be executed from the root folder of the project.
docker push iammukeshm/dotnet-webapi Migrations # This command is to be executed from the Host Directory of the project.
dotnet ef migrations add &amp;lt;CommitMessage&amp;gt; --project .././Migrators/Migrators.&amp;lt;Provider&amp;gt;/ --context ApplicationDbContext -o Migrations/Application CommitMessage : Enter a commit message here.</description></item><item><title>Project Structure</title><link>/dotnet-webapi-boilerplate/general/project-structure/</link><pubDate>Tue, 24 Aug 2021 11:40:05 +0530</pubDate><guid>/dotnet-webapi-boilerplate/general/project-structure/</guid><description>fullstackhero&amp;rsquo;s .NET WebApi Boilerplate is based on Clean Architecture. In other words, Onion / Hexagonal Architecture. Read about the advantages and principles of Onion Architecture here â†’
General Structure # This means that the entire solution is built in such a way that it can be scaled, maintained easily by teams of developers. This WebAPI Solution Primarily consists of the following .csproj files.
â”œâ”€â”€ src â”‚ â”œâ”€â”€ Host | | â””â”€â”€ Host.</description></item><item><title>Changelogs</title><link>/dotnet-webapi-boilerplate/general/changelogs/</link><pubDate>Tue, 24 Aug 2021 11:40:05 +0530</pubDate><guid>/dotnet-webapi-boilerplate/general/changelogs/</guid><description>0.0.6-rc Current # Release Tag 0.0.6-rc released on 2022-02-26
AD Authentication Support Oracle DB Provider for EFCore support Code Refactors Added ElasticSearch + Kibana for Logging Added Docker Compose for ElasticSearch + Kibana Container Integrated Finbucke Multitenant packages Solution Restructure Added Scripts for Generating Migrations Introduced CQRS Pattern with MediatR Better Configuration Files Added .rest file for API Testing Updated Postman Collection Code Cleanup Updated all Packages Serilog Startup fix Export to Excel Support Specification Pattern using Ardalis packages OpenAPI Client Generation 0.</description></item></channel></rss>